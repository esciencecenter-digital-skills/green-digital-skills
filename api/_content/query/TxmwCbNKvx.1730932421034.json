{"_path":"/modules/optimizing-energy-use/slides_optimizing_energy_use","_dir":"optimizing-energy-use","_draft":false,"_partial":false,"_locale":"","title":"Optimizing in Practice","description":"===","type":"slides","order":1,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"optimizing-energy-use-in-practice"},"children":[{"type":"text","value":"Optimizing Energy Use in Practice"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h3","props":{"id":"what-we-will-cover-here"},"children":[{"type":"text","value":"What we will cover here"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What software development choices can reduce energy wastage"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"How can we measure the actual energy usage of our code"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h3","props":{"id":"good-software-practice"},"children":[{"type":"text","value":"Good software practice"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Clean and maintainable software is essential\nfor sustainable/green software:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Ease of use, reduce error during data settings"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Less bugs, avoid wasteful bugged runs"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h3","props":{"id":"software-life-cycle"},"children":[{"type":"text","value":"Software life cycle"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Thinking about long term sustainability, documentation."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Reusable software is a key component of modern\nsoftware development, reducing the time/energy consuming\ntask of developing every component of complex softwares."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h3","props":{"id":"what-language-should-i-use"},"children":[{"type":"text","value":"What language should I use?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Typical conception of energy efficiency:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"C++ and Rust at the top"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Python and R at the bottom"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"There is a lot of truth in this but there are a lot of important considerations"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Many major numerical libraries in Python are not Python \"under the surface\""}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The core is usually C++ or something like that."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"e.g. PyTorch, Tensorflow, numpy (and many others)"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h3","props":{"id":"use-the-right-tool-for-each-task"},"children":[{"type":"text","value":"Use the right tool for each task"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Should I avoid \"slow\" and inefficient programming languages?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Well, each has its purpose\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Python: great for stitching pieces together, easy prototyping"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"C/C++/Fortran: better at crunching numbers fast"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Language benchmarks available in the literature can be misleading here\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Python/R for can be fine, it's more about the libraries you are using"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h3","props":{"id":"what-software-should-we-optimize"},"children":[{"type":"text","value":"What software should we optimize?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"It is important that frequently used tools are as efficient as possible"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Your single-use analysis scripts probably don't matter so much - just use the easiest language for the job"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Optimization is not free and costs development time (and energy) especially in lower level languages like C"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Generally there are not enough RSEs to do all the coding and optimizations, and researchers don't have time"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h3","props":{"id":"minimizing-energy-use"},"children":[{"type":"text","value":"Minimizing energy use"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Ultimately depends on the resources you use"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Number of CPU cores is clearly a large contributor"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Carbon footprint of memory is interesting - it doesn't matter how much you use, but how much is available. Don't request 10 times the memory you need on a server \"just in case\""}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Think about WHEN we run a job on a server. Energy mix different at different times."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Can use tools such as the Carbon Aware Task Scheduler - tells you what is the best time to run in the next 48 hours."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Most jobs have some flexibility - we don't care if we run it right now or in a few hours. Especially over the weekend."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h3","props":{"id":"time-to-solution"},"children":[{"type":"text","value":"Time to solution"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Energy is Power * time"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"As a first approximation, more efficient (faster) software will be energy efficient\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"It is possible to run on many CPUs although there is overhead from the parallelism."}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h3","props":{"id":"profile-your-code"},"children":[{"type":"text","value":"Profile your code"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"We recommend trying "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"CodeCarbon"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"More in this afternoon's hands-on workshop"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Also PMT (Power Measurement Toolkit), Rjoules, and many more"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h3","props":{"id":"what-if-i-cantwont-change-the-code"},"children":[{"type":"text","value":"What if I can't/won't change the code?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Perhaps you can profile the code but you cannot do much with the results\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"e.g. You are not the developer, or don't feel experienced enough"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"There are tools such as the Energy Aware Runtime\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Dynamically scales the CPU or GPU clock frequency up or down while the code is running"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"When code is waiting a lot (for I/O or memory), frequency is scaled down"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Remember that Power ~ frequency^2"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Also covered in this afternoon's hands-on workshop (HPC-track)"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h3","props":{"id":"a-warning-jevons-paradox"},"children":[{"type":"text","value":"A warning: Jevon's Paradox"}]},{"type":"element","tag":"pre","props":{"code":"In economics, the Jevons paradox occurs when technological progress increases\nthe efficiency with which a resource is used (reducing the amount necessary for any one use),\nbut the falling cost of use induces increases in demand enough that resource use is increased,\nrather than reduced.\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"In economics, the Jevons paradox occurs when technological progress increases\nthe efficiency with which a resource is used (reducing the amount necessary for any one use),\nbut the falling cost of use induces increases in demand enough that resource use is increased,\nrather than reduced.\n"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://en.wikipedia.org/wiki/Jevons_paradox","rel":["nofollow"]},"children":[{"type":"text","value":"https://en.wikipedia.org/wiki/Jevons_paradox"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Are you thinking about this the right way?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Is green computing really a purely technical issue?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Is your footprint by computing really your biggest contribution to the climate crisis?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What are other low hanging fruits you can tackle?"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nIn practice, reducing energy use overall is more about organizational policy and value judgements about what the expected return is for a given amount of energy used."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.esciencecenter.nl","rel":["nofollow"]},"children":[{"type":"text","value":"www.esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"mailto:info@esciencecenter.nl"},"children":[{"type":"text","value":"info@esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"020 - 460 47 70"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"what-we-will-cover-here","depth":3,"text":"What we will cover here"},{"id":"good-software-practice","depth":3,"text":"Good software practice"},{"id":"software-life-cycle","depth":3,"text":"Software life cycle"},{"id":"what-language-should-i-use","depth":3,"text":"What language should I use?"},{"id":"use-the-right-tool-for-each-task","depth":3,"text":"Use the right tool for each task"},{"id":"what-software-should-we-optimize","depth":3,"text":"What software should we optimize?"},{"id":"minimizing-energy-use","depth":3,"text":"Minimizing energy use"},{"id":"time-to-solution","depth":3,"text":"Time to solution"},{"id":"profile-your-code","depth":3,"text":"Profile your code"},{"id":"what-if-i-cantwont-change-the-code","depth":3,"text":"What if I can't/won't change the code?"},{"id":"a-warning-jevons-paradox","depth":3,"text":"A warning: Jevon's Paradox"}]}},"_type":"markdown","_id":"local_fs:modules:optimizing-energy-use:slides_optimizing_energy_use.md","_source":"local_fs","_file":"modules/optimizing-energy-use/slides_optimizing_energy_use.md","_extension":"md","plainText":"---\ntitle: Optimizing in Practice\ntype: slides\norder: 1\n---\n\n<!-- .slide: data-state=\"title\" -->\n\n# Optimizing Energy Use in Practice\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n### What we will cover here\n- What software development choices can reduce energy wastage\n- How can we measure the actual energy usage of our code\n\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n### Good software practice\n\nClean and maintainable software is essential\nfor sustainable/green software:\n - Ease of use, reduce error during data settings\n - Less bugs, avoid wasteful bugged runs\n\nNote:\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n### Software life cycle\n\n- Thinking about long term sustainability, documentation.\n- Reusable software is a key component of modern\nsoftware development, reducing the time/energy consuming\ntask of developing every component of complex softwares.\n\nNote:\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n### What language should I use?\n- Typical conception of energy efficiency:\n  - C++ and Rust at the top\n  - Python and R at the bottom\n- There is a lot of truth in this but there are a lot of important considerations\n- **Many major numerical libraries in Python are not Python \"under the surface\"**\n  - The core is usually C++ or something like that.\n  - e.g. PyTorch, Tensorflow, numpy (and many others)\n\nNote:\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n### Use the right tool for each task\n\n- Should I avoid \"slow\" and inefficient programming languages?\n- Well, each has its purpose\n  - Python: great for stitching pieces together, easy prototyping\n  - C/C++/Fortran: better at crunching numbers fast\n- Language benchmarks available in the literature can be misleading here\n  - Python/R for can be fine, it's more about the libraries you are using\n\nNote:\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n### What software should we optimize?\n- **It is important that frequently used tools are as efficient as possible**\n- Your single-use analysis scripts probably don't matter so much - just use the easiest language for the job\n- Optimization is not free and costs development time (and energy) especially in lower level languages like C\n- Generally there are not enough RSEs to do all the coding and optimizations, and researchers don't have time\n\nNote:\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n### Minimizing energy use\n- Ultimately depends on the resources you use\n- Number of CPU cores is clearly a large contributor\n- Carbon footprint of memory is interesting - it doesn't matter how much you use, but how much is available. Don't request 10 times the memory you need on a server \"just in case\"\n- Think about WHEN we run a job on a server. Energy mix different at different times.\n- Can use tools such as the Carbon Aware Task Scheduler - tells you what is the best time to run in the next 48 hours.\n- Most jobs have some flexibility - we don't care if we run it right now or in a few hours. Especially over the weekend.\n\nNote:\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n### Time to solution\n\n- Energy is Power * time\n- As a first approximation, more efficient (faster) software will be energy efficient\n  - It is possible to run on many CPUs although there is overhead from the parallelism.\n\nNote:\n\n===\n\n### Profile your code\n\n- We recommend trying `CodeCarbon`\n  - More in this afternoon's hands-on workshop\n- Also PMT (Power Measurement Toolkit), Rjoules, and many more \n\nNote:\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n### What if I can't/won't change the code?\n\n- Perhaps you can profile the code but you cannot do much with the results\n  - e.g. You are not the developer, or don't feel experienced enough\n- There are tools such as the Energy Aware Runtime\n  - Dynamically scales the CPU or GPU clock frequency up or down while the code is running\n  - When code is waiting a lot (for I/O or memory), frequency is scaled down\n  - Remember that Power ~ frequency^2\n  - Also covered in this afternoon's hands-on workshop (HPC-track)\n\nNote:\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n### A warning: Jevon's Paradox\n\n```\nIn economics, the Jevons paradox occurs when technological progress increases\nthe efficiency with which a resource is used (reducing the amount necessary for any one use),\nbut the falling cost of use induces increases in demand enough that resource use is increased,\nrather than reduced.\n```\n\n- [https://en.wikipedia.org/wiki/Jevons_paradox](https://en.wikipedia.org/wiki/Jevons_paradox)\n\n* Are you thinking about this the right way?\n* Is green computing really a purely technical issue?\n* Is your footprint by computing really your biggest contribution to the climate crisis?\n* What are other low hanging fruits you can tackle?\n\nNote:\nIn practice, reducing energy use overall is more about organizational policy and value judgements about what the expected return is for a given amount of energy used.\n\n===\n\n\n<!-- .slide: data-state=\"keepintouch\" -->\n\n\nwww.esciencecenter.nl\n\ninfo@esciencecenter.nl\n\n020 - 460 47 70\n"}